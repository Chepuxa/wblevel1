package main

import "fmt"

/*
Вопрос: Что выведет данная программа и почему?


func someAction(v []int8, b int8) {
  v[0] = 100
  v = append(v, b)
}

func main() {
  var a = []int8{1, 2, 3, 4, 5}
  someAction(a, 6)
  fmt.Println(a)
}

Ответ:
100, 2, 3, 4, 5
Т.к. слайсы хранят ссылку на лежащий внутри них массив, даже при условии, что функции работают с копиями переданных аргументов, и копия и оригинал ссылаются на один и тот же массив
Соответственно, все изменения будут отображены в любых слайсах, которые ссылаются на этот массив
Это действительно до того момента, пока переданному слайсу хватает capacity. В описанном случае capacity не хватит, и будет аллоцирован новый массив. 
После этого любые операции над слайсом в someAction не будут отображены в оригинальном слайсе, т.к. они будут ссылаться на разные массивы.

В дополненном примере ниже при запуске можно увидеть, что слайс в main и в someAction имеет одинаковые ссылки до выполнения операции append, после чего переменная v начинает указывать на другой массив.
*/
func someAction(v []int8, b int8) {
	v[0] = 100
	fmt.Printf("Before append: address - %p, cap - %d\n", v, cap(v))
	v = append(v, b)
	fmt.Printf("After append: address - %p, cap - %d\n", v, cap(v))
  }
  
  func main() {
	var a = []int8{1, 2, 3, 4, 5}
	fmt.Printf("Before someAction: address - %p, cap - %d\n", a, cap(a))
	someAction(a, 6)
	fmt.Println(a)
  }